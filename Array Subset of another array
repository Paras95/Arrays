Given two arrays: arr1[0..m-1] of size m and arr2[0..n-1] of size n. Task is to check whether arr2[] is a subset of arr1[] or not. Both the arrays can be both unsorted or sorted. It may be assumed that elements in both array are distinct.

Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains an two integers m and n denoting the size of arr1 and arr2 respectively. The following two lines contains the space separated elements of arr1 and arr2 respectively.

Output:
Print "Yes"(without quotes) if arr2 is subset of arr1.
Print "No"(without quotes) if arr2 is not subset of arr1.

Constraints:
1 <= T <= 100
1 <= m,n <= 105
1 <= arr1[i], arr2[j] <= 105

Example:
Input:
3
6 4
11 1 13 21 3 7
11 3 7 1
6 3
1 2 3 4 5 6
1 2 4
5 3
10 5 2 23 19
19 5 3

Output:
Yes
Yes
No

***************************************************Code******************************************************************

#include<iostream>
#include<bits/stdc++.h>
#include<stack>
#include<queue>
#include<stack>
using namespace std;

bool isSubArray(int arr1[],int arr2[],int n,int m)
{
  unordered_set<int>myset;
  for(int i=0;i<n;i++)
  {
    myset.insert(arr1[i]);
  }
  for(int i=0;i<m;i++)
  {
    if(myset.find(arr2[i])==myset.end())
    {
      return false;
    }
  }
  return true;
}
int main()
{
  int test;
  std::cin>>test;
  while(test--)
  {
    int n,m;
    std::cin>>n>>m;
    int arr1[n];
    int arr2[m];
    for(int i=0;i<n;i++)
    {
      std::cin>>arr1[i];
    }
    for(int j=0;j<m;j++)
    {
      std::cin>>arr2[j];
    }
    if(isSubArray(arr1,arr2,n,m))
    {
      std::cout<<"Yes"<<endl;
    }
    else
    {
      std::cout<<"No"<<endl;
    }
  }
  return 0;
}
