Given a 32 bit number x, reverse its binary form and print the answer in decimal.

Input:
The first line of input consists T denoting the number of test cases. T testcases follow. Each test case contains a single 32 bit integer

Output:
For each test case, in a new line, print the reverse of integer.

Constraints:
1 <= T <= 100
0 <= x <= 4294967295

Example:
Input:
2
1
5
Output:
2147483648
2684354560

Explanation:
Testcase1:
00000000000000000000000000000001 =1
10000000000000000000000000000000 =2147483648

*********************************Code*******************************************

#include<iostream>
#include<bits/stdc++.h>
#include<stack>
#include<cmath>
using namespace std;

unsigned int reverseBits(unsigned int num)
{
    unsigned int NO_OF_BITS=sizeof(num)*8;
    unsigned int reverse_num=0,i,temp;
    for(int i=0;i<NO_OF_BITS;i++)
    {
        temp=(num & (1<<i));
        if(temp)
        {
            reverse_num|=(1<<((NO_OF_BITS-1)-i));
        }
    }
    return reverse_num;
}
int main()
{
    int test;
    std::cin>>test;
    while(test--)
    {
        unsigned int num;
        std::cin>>num;
        std::cout<<reverseBits(num)<<endl;
    }
    return 0;
}
